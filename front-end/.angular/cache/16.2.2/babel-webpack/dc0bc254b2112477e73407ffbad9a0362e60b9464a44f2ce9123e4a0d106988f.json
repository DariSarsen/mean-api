{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class FileUploadComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  onFileUpload() {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      this.http.post('http://localhost:3000/upload', formData).subscribe({\n        next: response => {\n          console.log('Файл успешно загружен', response);\n          // Перенаправление на страницу с анализом данных и передача параметра \"analysis\"\n          this.router.navigate(['/analysis'], {\n            queryParams: {\n              analysis: JSON.stringify(response)\n            }\n          });\n        },\n        error: error => {\n          console.error('Ошибка загрузки файла', error);\n        }\n      });\n    }\n  }\n}\n_class = FileUploadComponent;\n_class.ɵfac = function FileUploadComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-file-upload\"]],\n  decls: 4,\n  vars: 0,\n  consts: [[\"enctype\", \"multipart/form-data\", 3, \"ngSubmit\"], [\"type\", \"file\", 3, \"change\"], [\"type\", \"submit\"]],\n  template: function FileUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FileUploadComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onFileUpload();\n      });\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_1_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FileUploadComponent","constructor","http","router","onFileSelected","event","selectedFile","target","files","onFileUpload","formData","FormData","append","post","subscribe","next","response","console","log","navigate","queryParams","analysis","JSON","stringify","error","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","selectors","decls","vars","consts","template","FileUploadComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","FileUploadComponent_Template_form_ngSubmit_0_listener","FileUploadComponent_Template_input_change_1_listener","$event","ɵɵelementEnd","ɵɵtext"],"sources":["C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\file-upload\\file-upload.component.ts","C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\file-upload\\file-upload.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent {\n  selectedFile: File | undefined;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  onFileUpload() {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n\n      this.http.post('http://localhost:3000/upload', formData).subscribe({\n        next: response => {\n          console.log('Файл успешно загружен', response);\n          // Перенаправление на страницу с анализом данных и передача параметра \"analysis\"\n          this.router.navigate(['/analysis'], { queryParams: { analysis: JSON.stringify(response) } });\n        },\n        error: error => {\n          console.error('Ошибка загрузки файла', error);\n        }\n      });\n\n    }\n  }\n}\n","<form (ngSubmit)=\"onFileUpload()\" enctype=\"multipart/form-data\">\n  <input type=\"file\" (change)=\"onFileSelected($event)\">\n  <button type=\"submit\">Загрузить файл</button>\n</form>\n"],"mappings":";;;;;AAUA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE/DC,cAAcA,CAACC,KAAU;IACvB,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;EAEAC,YAAYA,CAAA;IACV,IAAI,IAAI,CAACH,YAAY,EAAE;MACrB,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACN,YAAY,CAAC;MAE1C,IAAI,CAACJ,IAAI,CAACW,IAAI,CAAC,8BAA8B,EAAEH,QAAQ,CAAC,CAACI,SAAS,CAAC;QACjEC,IAAI,EAAEC,QAAQ,IAAG;UACfC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;UAC9C;UACA,IAAI,CAACb,MAAM,CAACgB,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE;YAAEC,WAAW,EAAE;cAAEC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;YAAC;UAAE,CAAE,CAAC;QAC9F,CAAC;QACDQ,KAAK,EAAEA,KAAK,IAAG;UACbP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C;OACD,CAAC;;EAGN;;SA1BWxB,mBAAmB;;mBAAnBA,MAAmB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAnB9B,MAAmB;EAAA+B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVhCZ,EAAA,CAAAc,cAAA,cAAgE;MAA1Dd,EAAA,CAAAe,UAAA,sBAAAC,sDAAA;QAAA,OAAYH,GAAA,CAAA7B,YAAA,EAAc;MAAA,EAAC;MAC/BgB,EAAA,CAAAc,cAAA,eAAqD;MAAlCd,EAAA,CAAAe,UAAA,oBAAAE,qDAAAC,MAAA;QAAA,OAAUL,GAAA,CAAAlC,cAAA,CAAAuC,MAAA,CAAsB;MAAA,EAAC;MAApDlB,EAAA,CAAAmB,YAAA,EAAqD;MACrDnB,EAAA,CAAAc,cAAA,gBAAsB;MAAAd,EAAA,CAAAoB,MAAA,sFAAc;MAAApB,EAAA,CAAAmB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}