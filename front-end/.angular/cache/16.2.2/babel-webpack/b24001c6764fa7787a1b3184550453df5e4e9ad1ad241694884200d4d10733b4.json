{"ast":null,"code":"var _class;\nimport Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class FileUploadComponent {\n  constructor(http) {\n    this.http = http;\n    this.analysisData = {};\n    this.chartInstance = null;\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  onFileUpload() {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      this.http.post('http://localhost:3000/upload', formData).subscribe({\n        next: response => {\n          console.log('Ответ сервера:', response);\n          this.displayBarChart(response); // Отображение анализа\n        },\n\n        error: error => {\n          console.error('Ошибка загрузки файла', error);\n        }\n      });\n    }\n  }\n  displayBarChart(analysisData) {\n    this.analysisData = analysisData;\n    if (this.chartInstance) {\n      this.chartInstance.destroy();\n    }\n    console.log(this.analysisData.numericColumns.keys);\n    const chartData = {\n      labels: Object.keys(this.analysisData.numericColumns.keys),\n      datasets: [{\n        label: 'Значения',\n        data: this.analysisData.numericColumns.values,\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        borderWidth: 1\n      }]\n    };\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false\n      // Дополнительные опции для столбчатой диаграммы\n    };\n\n    const ctx = document.getElementById('chartCanvas');\n    this.chartInstance = new Chart(ctx, {\n      type: 'bar',\n      data: chartData,\n      options: chartOptions\n    });\n  }\n}\n_class = FileUploadComponent;\n_class.ɵfac = function FileUploadComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-file-upload\"]],\n  decls: 6,\n  vars: 0,\n  consts: [[\"enctype\", \"multipart/form-data\", 3, \"ngSubmit\"], [\"type\", \"file\", 3, \"change\"], [\"type\", \"submit\"], [\"id\", \"chartCanvas\", \"width\", \"400\", \"height\", \"400\"]],\n  template: function FileUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FileUploadComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onFileUpload();\n      });\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_1_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵelement(5, \"canvas\", 3);\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Chart","FileUploadComponent","constructor","http","analysisData","chartInstance","onFileSelected","event","selectedFile","target","files","onFileUpload","formData","FormData","append","post","subscribe","next","response","console","log","displayBarChart","error","destroy","numericColumns","keys","chartData","labels","Object","datasets","label","data","values","backgroundColor","borderColor","borderWidth","chartOptions","responsive","maintainAspectRatio","ctx","document","getElementById","type","options","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","FileUploadComponent_Template","rf","ɵɵelementStart","ɵɵlistener","FileUploadComponent_Template_form_ngSubmit_0_listener","FileUploadComponent_Template_input_change_1_listener","$event","ɵɵelementEnd","ɵɵtext","ɵɵelement"],"sources":["C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\file-upload\\file-upload.component.ts","C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\file-upload\\file-upload.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport Chart from 'chart.js/auto';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent {\n  selectedFile: File | undefined;\n  analysisData: any = {};\n  chartInstance: Chart | null = null;\n\n  constructor(private http: HttpClient) {\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  onFileUpload() {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n\n      this.http.post<any>('http://localhost:3000/upload', formData).subscribe({\n        next: response => {\n          console.log('Ответ сервера:', response);\n          this.displayBarChart(response); // Отображение анализа\n        },\n        error: error => {\n          console.error('Ошибка загрузки файла', error);\n        }\n      });\n    }\n  }\n\n\n  displayBarChart(analysisData: any) {\n    this.analysisData = analysisData;\n\n    if (this.chartInstance) {\n      this.chartInstance.destroy();\n    }\n\n    console.log(this.analysisData.numericColumns.keys)\n\n    const chartData = {\n      labels: Object.keys(this.analysisData.numericColumns.keys),\n      datasets: [{\n        label: 'Значения',\n        data: this.analysisData.numericColumns.values,\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        borderWidth: 1,\n      }]\n    };\n\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      // Дополнительные опции для столбчатой диаграммы\n    };\n\n    const ctx = document.getElementById('chartCanvas') as HTMLCanvasElement;\n    this.chartInstance = new Chart(ctx, {\n      type: 'bar',\n      data: chartData,\n      options: chartOptions,\n    });\n  }\n\n\n}\n","<form (ngSubmit)=\"onFileUpload()\" enctype=\"multipart/form-data\">\n  <input type=\"file\" (change)=\"onFileSelected($event)\">\n  <button type=\"submit\">Загрузить файл</button>\n</form>\n\n\n<!--<div *ngIf=\"analysisData.labels\">-->\n<!--  <p>Пример вывода данных:</p>-->\n<!--  <p>Метки: {{ analysisData.labels }}</p>-->\n\n  <div>\n    <!-- Элемент для отображения графика -->\n    <canvas id=\"chartCanvas\" width=\"400\" height=\"400\"></canvas>\n  </div>\n  <!-- Здесь можно добавить элементы для отображения графика -->\n<!--</div>-->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}