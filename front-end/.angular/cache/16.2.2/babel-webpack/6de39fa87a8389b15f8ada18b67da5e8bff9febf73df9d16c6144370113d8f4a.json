{"ast":null,"code":"var _class;\nimport Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FileUploadComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵelement(2, \"canvas\", 4);\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class FileUploadComponent {\n  constructor(http) {\n    this.http = http;\n    this.analysisData = {};\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  onFileUpload() {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      this.http.post('http://localhost:3000/upload', formData).subscribe({\n        next: response => {\n          console.log('Ответ сервера:', response);\n          this.displayAnalysis(response); // Отображение анализа\n        },\n\n        error: error => {\n          console.error('Ошибка загрузки файла', error);\n        }\n      });\n    }\n  }\n  displayAnalysis(analysisData) {\n    this.analysisData = analysisData;\n    // Проверка на наличие данных для графика\n    if (this.analysisData.labels && this.analysisData.values) {\n      const canvas = document.getElementById('chartCanvas'); // Получение элемента canvas из шаблона\n      const ctx = canvas.getContext('2d');\n      // Создание экземпляра графика с использованием Chart.js\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: this.analysisData.labels,\n          datasets: [{\n            label: 'Анализ данных',\n            data: this.analysisData.values,\n            backgroundColor: 'rgba(54, 162, 235, 0.6)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }\n}\n_class = FileUploadComponent;\n_class.ɵfac = function FileUploadComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-file-upload\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[\"enctype\", \"multipart/form-data\", 3, \"ngSubmit\"], [\"type\", \"file\", 3, \"change\"], [\"type\", \"submit\"], [4, \"ngIf\"], [\"id\", \"chartCanvas\", \"width\", \"400\", \"height\", \"400\"]],\n  template: function FileUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FileUploadComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onFileUpload();\n      });\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_1_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(4, FileUploadComponent_div_4_Template, 3, 0, \"div\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.analysisData.labels);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Chart","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","FileUploadComponent","constructor","http","analysisData","onFileSelected","event","selectedFile","target","files","onFileUpload","formData","FormData","append","post","subscribe","next","response","console","log","displayAnalysis","error","labels","values","canvas","document","getElementById","ctx","getContext","type","data","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","FileUploadComponent_Template","rf","ɵɵlistener","FileUploadComponent_Template_form_ngSubmit_0_listener","FileUploadComponent_Template_input_change_1_listener","$event","ɵɵtext","ɵɵtemplate","FileUploadComponent_div_4_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\file-upload\\file-upload.component.ts","C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\file-upload\\file-upload.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport Chart from 'chart.js/auto';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent {\n  selectedFile: File | undefined;\n  analysisData: any = {};\n\n  constructor(private http: HttpClient) {\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  onFileUpload() {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n\n      this.http.post<any>('http://localhost:3000/upload', formData).subscribe({\n        next: response => {\n          console.log('Ответ сервера:', response);\n          this.displayAnalysis(response); // Отображение анализа\n        },\n        error: error => {\n          console.error('Ошибка загрузки файла', error);\n        }\n      });\n    }\n  }\n\n\n  displayAnalysis(analysisData: any) {\n    this.analysisData = analysisData;\n\n    // Проверка на наличие данных для графика\n    if (this.analysisData.labels && this.analysisData.values) {\n      const canvas: any = document.getElementById('chartCanvas'); // Получение элемента canvas из шаблона\n      const ctx = canvas.getContext('2d');\n\n      // Создание экземпляра графика с использованием Chart.js\n      new Chart(ctx, {\n        type: 'bar', // Тип графика (можно выбрать другой тип по вашему желанию)\n        data: {\n          labels: this.analysisData.labels,\n          datasets: [{\n            label: 'Анализ данных',\n            data: this.analysisData.values,\n            backgroundColor: 'rgba(54, 162, 235, 0.6)', // Цвет фона столбцов\n            borderColor: 'rgba(54, 162, 235, 1)', // Цвет обводки столбцов\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }\n}\n","<form (ngSubmit)=\"onFileUpload()\" enctype=\"multipart/form-data\">\n  <input type=\"file\" (change)=\"onFileSelected($event)\">\n  <button type=\"submit\">Загрузить файл</button>\n</form>\n\n\n<div *ngIf=\"analysisData.labels\">\n<!--  <p>Пример вывода данных:</p>-->\n<!--  <p>Метки: {{ analysisData.labels }}</p>-->\n\n  <div>\n    <!-- Элемент для отображения графика -->\n    <canvas id=\"chartCanvas\" width=\"400\" height=\"400\"></canvas>\n  </div>\n  <!-- Здесь можно добавить элементы для отображения графика -->\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}