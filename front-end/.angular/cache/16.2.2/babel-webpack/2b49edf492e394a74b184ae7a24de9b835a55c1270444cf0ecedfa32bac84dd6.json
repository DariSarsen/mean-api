{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../book.service\";\nimport * as i4 from \"@angular/forms\";\nexport class EditBookComponent {\n  constructor(route, http, bookService) {\n    this.route = route;\n    this.http = http;\n    this.bookService = bookService;\n    this.bookId = null; // Используем тип string | null\n    this.updatedBook = {\n      title: '',\n      author: '',\n      description: ''\n    };\n  }\n  ngOnInit() {\n    this.bookId = this.route.snapshot.paramMap.get('id');\n    if (this.bookId) {\n      // Получение информации о книге для редактирования\n      this.http.get(`http://localhost:3000/books/${this.bookId}`).subscribe(book => {\n        this.updatedBook = book;\n      });\n    }\n  }\n  updateBook() {\n    if (this.bookId) {\n      this.http.put(`http://localhost:3000/books/${this.bookId}`, this.updatedBook).subscribe(() => {\n        // Действия после успешного обновления книги, например, перезагрузка списка книг\n        this.bookService.notifyBookEdited();\n      });\n    }\n  }\n}\n_class = EditBookComponent;\n_class.ɵfac = function EditBookComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.BookService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-edit-book\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[3, \"submit\"], [\"type\", \"text\", \"placeholder\", \"Title\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Author\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function EditBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function EditBookComponent_Template_form_submit_0_listener() {\n        return ctx.updateBook();\n      });\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function EditBookComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.updatedBook.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function EditBookComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.updatedBook.author = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"textarea\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function EditBookComponent_Template_textarea_ngModelChange_3_listener($event) {\n        return ctx.updatedBook.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵtext(5, \"Update Book\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.updatedBook.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.updatedBook.author);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.updatedBook.description);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EditBookComponent","constructor","route","http","bookService","bookId","updatedBook","title","author","description","ngOnInit","snapshot","paramMap","get","subscribe","book","updateBook","put","notifyBookEdited","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","i3","BookService","selectors","decls","vars","consts","template","EditBookComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","EditBookComponent_Template_form_submit_0_listener","EditBookComponent_Template_input_ngModelChange_1_listener","$event","ɵɵelementEnd","EditBookComponent_Template_input_ngModelChange_2_listener","EditBookComponent_Template_textarea_ngModelChange_3_listener","ɵɵtext","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\edit-book\\edit-book.component.ts","C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\edit-book\\edit-book.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\nimport { BookService } from '../book.service';\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styleUrls: ['./edit-book.component.css']\n})\nexport class EditBookComponent implements OnInit {\n  bookId: string | null = null; // Используем тип string | null\n\n  updatedBook = {\n    title: '',\n    author: '',\n    description: ''\n  };\n\n  constructor(private route: ActivatedRoute, private http: HttpClient, private bookService: BookService) { }\n\n  ngOnInit(): void {\n    this.bookId = this.route.snapshot.paramMap.get('id');\n    if (this.bookId) {\n      // Получение информации о книге для редактирования\n      this.http.get<any>(`http://localhost:3000/books/${this.bookId}`)\n        .subscribe(book => {\n          this.updatedBook = book;\n        });\n    }\n  }\n\n  updateBook() {\n    if (this.bookId) {\n      this.http.put<any>(`http://localhost:3000/books/${this.bookId}`, this.updatedBook)\n        .subscribe(() => {\n          // Действия после успешного обновления книги, например, перезагрузка списка книг\n          this.bookService.notifyBookEdited();\n        });\n    }\n  }\n}\n","<!-- Форма для редактирования книги -->\n<form (submit)=\"updateBook()\">\n  <input type=\"text\" placeholder=\"Title\" [(ngModel)]=\"updatedBook.title\">\n  <input type=\"text\" placeholder=\"Author\" [(ngModel)]=\"updatedBook.author\">\n  <textarea placeholder=\"Description\" [(ngModel)]=\"updatedBook.description\"></textarea>\n  <!-- другие поля книги... -->\n  <button type=\"submit\">Update Book</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}