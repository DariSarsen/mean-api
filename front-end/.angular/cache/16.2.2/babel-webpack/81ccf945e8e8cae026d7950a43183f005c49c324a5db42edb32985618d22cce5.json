{"ast":null,"code":"var _class;\nimport Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class FileUploadComponent {\n  constructor(http) {\n    this.http = http;\n    this.analysisData = {};\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  onFileUpload() {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n      this.http.post('http://localhost:3000/upload', formData).subscribe({\n        next: response => {\n          console.log('Ответ сервера:', response);\n          this.displayBarChart(response); // Отображение анализа\n          this.displayPieChart(response); // Отображение анализа\n        },\n\n        error: error => {\n          console.error('Ошибка загрузки файла', error);\n        }\n      });\n    }\n  }\n  displayBarChart(analysisData) {\n    this.analysisData = analysisData;\n    console.log(Object.keys(this.analysisData.numericColumns));\n    const chartData = {\n      labels: Object.keys(this.analysisData.numericColumns),\n      datasets: [{\n        label: 'Значения',\n        data: this.analysisData.numericColumns,\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        borderWidth: 1\n      }]\n    };\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false\n      // Дополнительные опции для столбчатой диаграммы\n    };\n\n    const ctx = document.getElementById('chartBarCanvas');\n    const barChart = new Chart(ctx, {\n      type: 'bar',\n      data: chartData,\n      options: chartOptions\n    });\n  }\n  displayPieChart(analysisData) {\n    this.analysisData = analysisData;\n    const chartData = {\n      labels: this.analysisData.labels,\n      datasets: [{\n        data: this.analysisData.values,\n        backgroundColor: ['rgba(255, 99, 132, 0.5)', 'rgba(54, 162, 235, 0.5)', 'rgba(255, 206, 86, 0.5)', 'rgba(234, 162, 235, 0.5)', 'rgba(75, 62, 35, 0.5)', 'rgba(175, 62, 35, 0.5)', 'rgba(175, 162, 35, 0.5)', 'rgba(5, 162, 35, 0.5)', 'rgba(55, 6, 186, 0.5)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(234, 162, 235, 1)', 'rgba(75, 62, 35, 1)', 'rgba(175, 62, 35, 1)', 'rgba(175, 162, 35, 1)', 'rgba(5, 162, 35, 1)', 'rgba(55, 6, 186, 1)'],\n        borderWidth: 1\n      }]\n    };\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false\n      // Дополнительные опции для круговой диаграммы\n    };\n\n    const ctx = document.getElementById('chartPieCanvas');\n    const pieChart = new Chart(ctx, {\n      type: 'pie',\n      data: chartData,\n      options: chartOptions\n    });\n  }\n}\n_class = FileUploadComponent;\n_class.ɵfac = function FileUploadComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-file-upload\"]],\n  decls: 8,\n  vars: 0,\n  consts: [[\"enctype\", \"multipart/form-data\", 3, \"ngSubmit\"], [\"type\", \"file\", 3, \"change\"], [\"type\", \"submit\"], [\"id\", \"chartBarCanvas\", \"width\", \"400\", \"height\", \"400\"], [\"id\", \"chartPieCanvas\", \"width\", \"400\", \"height\", \"400\"]],\n  template: function FileUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FileUploadComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onFileUpload();\n      });\n      i0.ɵɵelementStart(1, \"input\", 1);\n      i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_1_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵelement(5, \"canvas\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\");\n      i0.ɵɵelement(7, \"canvas\", 4);\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Chart","FileUploadComponent","constructor","http","analysisData","onFileSelected","event","selectedFile","target","files","onFileUpload","formData","FormData","append","post","subscribe","next","response","console","log","displayBarChart","displayPieChart","error","Object","keys","numericColumns","chartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","chartOptions","responsive","maintainAspectRatio","ctx","document","getElementById","barChart","type","options","values","pieChart","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","FileUploadComponent_Template","rf","ɵɵelementStart","ɵɵlistener","FileUploadComponent_Template_form_ngSubmit_0_listener","FileUploadComponent_Template_input_change_1_listener","$event","ɵɵelementEnd","ɵɵtext","ɵɵelement"],"sources":["C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\file-upload\\file-upload.component.ts","C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\file-upload\\file-upload.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport Chart from 'chart.js/auto';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent {\n  selectedFile: File | undefined;\n  analysisData: any = {};\n  constructor(private http: HttpClient) {\n  }\n\n  onFileSelected(event: any) {\n    this.selectedFile = event.target.files[0];\n  }\n\n  onFileUpload() {\n    if (this.selectedFile) {\n      const formData = new FormData();\n      formData.append('file', this.selectedFile);\n\n      this.http.post<any>('http://localhost:3000/upload', formData).subscribe({\n        next: response => {\n          console.log('Ответ сервера:', response);\n          this.displayBarChart(response); // Отображение анализа\n          this.displayPieChart(response); // Отображение анализа\n        },\n        error: error => {\n          console.error('Ошибка загрузки файла', error);\n        }\n      });\n    }\n  }\n\n\n  displayBarChart(analysisData: any) {\n    this.analysisData = analysisData;\n\n    console.log(Object.keys(this.analysisData.numericColumns))\n\n    const chartData = {\n      labels: Object.keys(this.analysisData.numericColumns),\n      datasets: [{\n        label: 'Значения',\n        data: this.analysisData.numericColumns,\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        borderWidth: 1,\n      }]\n    };\n\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      // Дополнительные опции для столбчатой диаграммы\n    };\n\n    const ctx = document.getElementById('chartBarCanvas') as HTMLCanvasElement;\n    const barChart = new Chart(ctx, {\n      type: 'bar',\n      data: chartData,\n      options: chartOptions,\n    });\n  }\n\n  displayPieChart(analysisData: any) {\n    this.analysisData = analysisData;\n\n    const chartData = {\n      labels: this.analysisData.labels,\n      datasets: [{\n        data: this.analysisData.values,\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.5)',\n          'rgba(54, 162, 235, 0.5)',\n          'rgba(255, 206, 86, 0.5)',\n          'rgba(234, 162, 235, 0.5)',\n          'rgba(75, 62, 35, 0.5)',\n          'rgba(175, 62, 35, 0.5)',\n          'rgba(175, 162, 35, 0.5)',\n          'rgba(5, 162, 35, 0.5)',\n          'rgba(55, 6, 186, 0.5)'\n        ],\n        borderColor: [\n          'rgba(255, 99, 132, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(234, 162, 235, 1)',\n          'rgba(75, 62, 35, 1)',\n          'rgba(175, 62, 35, 1)',\n          'rgba(175, 162, 35, 1)',\n          'rgba(5, 162, 35, 1)',\n          'rgba(55, 6, 186, 1)'\n        ],\n        borderWidth: 1,\n      }]\n    };\n\n    const chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      // Дополнительные опции для круговой диаграммы\n    };\n\n    const ctx = document.getElementById('chartPieCanvas') as HTMLCanvasElement;\n    const pieChart = new Chart(ctx, {\n      type: 'pie',\n      data: chartData,\n      options: chartOptions,\n    });\n  }\n\n}\n","<form (ngSubmit)=\"onFileUpload()\" enctype=\"multipart/form-data\">\n  <input type=\"file\" (change)=\"onFileSelected($event)\">\n  <button type=\"submit\">Загрузить файл</button>\n</form>\n\n\n<!--<div *ngIf=\"analysisData.labels\">-->\n<!--  <p>Пример вывода данных:</p>-->\n<!--  <p>Метки: {{ analysisData.labels }}</p>-->\n\n<div>\n  <!-- Элемент для отображения графика -->\n  <canvas id=\"chartBarCanvas\" width=\"400\" height=\"400\"></canvas>\n</div>\n<div>\n  <!-- Элемент для отображения графика -->\n  <canvas id=\"chartPieCanvas\" width=\"400\" height=\"400\"></canvas>\n</div>\n<!--</div>-->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}