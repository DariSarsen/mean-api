{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AddTaskService {\n  constructor(http) {\n    this.http = http;\n  }\n  addTask(task) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post('http://localhost:3000/task/addtask', task, {\n      headers: headers\n    }.pipe(map(response => response.json())));\n  }\n}\n_class = AddTaskService;\n_class.ɵfac = function AddTaskService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","map","AddTaskService","constructor","http","addTask","task","headers","post","pipe","response","json","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\daris\\Documents\\,,,\\Projects\\mean-api\\front-end\\src\\app\\add-task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { response } from 'express';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddTaskService {\n\n  constructor(private http: HttpClient) { }\n\n  addTask(task: any) {\n    let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post(\n      'http://localhost:3000/task/addtask', \n      task, \n      { headers: headers }.pipe(map((response: any)=>response.json()))\n      );\n  }\n}\n "],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,GAAG,QAAQ,gBAAgB;;;AAMpC,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,OAAOA,CAACC,IAAS;IACf,IAAIC,OAAO,GAAG,IAAIP,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACrE,OAAO,IAAI,CAACI,IAAI,CAACI,IAAI,CACnB,oCAAoC,EACpCF,IAAI,EACJ;MAAEC,OAAO,EAAEA;IAAO,CAAE,CAACE,IAAI,CAACR,GAAG,CAAES,QAAa,IAAGA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAAC,CAC/D;EACL;;SAXWT,cAAc;;mBAAdA,MAAc,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdb,MAAc;EAAAc,OAAA,EAAdd,MAAc,CAAAe,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}