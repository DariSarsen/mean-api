{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"../auth.service\";\nimport * as i5 from \"@angular/forms\";\nexport class AuthComponent {\n  constructor(http, router, toastr, authService) {\n    this.http = http;\n    this.router = router;\n    this.toastr = toastr;\n    this.authService = authService;\n    this.loginData = {\n      email: '',\n      password: ''\n    };\n  }\n  loginUser() {\n    this.http.post('http://localhost:3000/account/login', this.loginData).subscribe({\n      next: response => {\n        this.toastr.success('Аутентификация успешна!', 'Успех');\n        console.log(response.name);\n        this.authService.login(response.name);\n        this.router.navigate(['/']);\n      },\n      error: error => {\n        this.toastr.error(error.error.message, 'Ошибка при аутентификации');\n        console.error('Ошибка при аутентификации:', error);\n      }\n    });\n  }\n}\n_class = AuthComponent;\n_class.ɵfac = function AuthComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-auth\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-5\", \"col-md-8\", \"mx-auto\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"mb-4\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\"]],\n  template: function AuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"\\u0410\\u0443\\u0442\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u044F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.loginUser();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.loginData.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.loginData.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"button\", 10);\n      i0.ɵɵtext(15, \"\\u0412\\u043E\\u0439\\u0442\\u0438\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.loginData.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.loginData.password);\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["AuthComponent","constructor","http","router","toastr","authService","loginData","email","password","loginUser","post","subscribe","next","response","success","console","log","name","login","navigate","error","message","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","i3","ToastrService","i4","AuthService","selectors","decls","vars","consts","template","AuthComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AuthComponent_Template_form_ngSubmit_5_listener","AuthComponent_Template_input_ngModelChange_9_listener","$event","AuthComponent_Template_input_ngModelChange_13_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\auth\\auth.component.ts","C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\auth\\auth.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../auth.service';\nimport {response} from \"express\";\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent {\n\n  loginData = {\n    email: '',\n    password: ''\n  };\n\n  constructor(private http: HttpClient, private router: Router, private toastr: ToastrService, private authService: AuthService) {}\n\n  loginUser() {\n    this.http.post<any>('http://localhost:3000/account/login', this.loginData)\n      .subscribe( {\n        next: (response) => {\n          this.toastr.success('Аутентификация успешна!', 'Успех');\n          console.log(response.name)\n          this.authService.login(response.name);\n          this.router.navigate(['/']);\n        },\n        error: (error) => {\n          this.toastr.error(error.error.message, 'Ошибка при аутентификации');\n          console.error('Ошибка при аутентификации:', error);\n        }\n      });\n  }\n\n}\n","<!--<main class=\"form-signin border shadow p-5 text-center\">-->\n<!--    <form (submit)=\"userLoginClick()\">-->\n<!--      <h1 class=\"h2 mb-5 fw-normal\">Please sign in</h1>-->\n<!--  -->\n<!--      <div class=\"form-floating\">-->\n<!--        <input type=\"email\" [(ngModel)]=\"email\"  name=\"email\" class=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\">-->\n<!--        <label for=\"floatingInput\">Email address</label>-->\n<!--      </div>-->\n<!--      <div class=\"form-floating mt-3\">-->\n<!--        <input type=\"password\" [(ngModel)]=\"password\"  name=\"password\" class=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\">-->\n<!--        <label for=\"floatingPassword\">Password</label>-->\n<!--      </div>-->\n<!--  -->\n<!--      <div class=\"checkbox my-3 text-start\">-->\n<!--        <label>-->\n<!--          <input type=\"checkbox\" value=\"remember-me\"> Remember me-->\n<!--        </label>-->\n<!--      </div>-->\n<!--      <button class=\"w-100 btn btn-lg btn-primary mb-4\" type=\"submit\">Sign in</button>-->\n<!--      <a [routerLink]=\"['/reg']\" class=\"text-dark\">Still not have an account?</a>-->\n<!--    </form>-->\n\n<!--  </main>-->\n<div class=\"container mt-5 col-md-8 mx-auto\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-6\">\n      <h2 class=\"mb-4\">Аутентификация</h2>\n      <form (ngSubmit)=\"loginUser()\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" [(ngModel)]=\"loginData.email\" name=\"email\" required>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Пароль</label>\n          <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Пароль\" [(ngModel)]=\"loginData.password\" name=\"password\" required>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary mt-3\">Войти</button>\n      </form>\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}