{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GoogleBooksService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://www.googleapis.com/books/v1/volumes';\n    this.apiKey = 'AIzaSyDguXYpSFXt88B00xhKtFSn5FoKs7u8m_c';\n  }\n  searchBooks(query) {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.apiKey}`);\n    return this.http.get(`${this.apiUrl}?q=${query}`, {\n      headers: headers\n    });\n  }\n  getBestsellers() {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.apiKey}`);\n    return this.http.get(`${this.apiUrl}/volumes?q=bestsellers`, {\n      headers: headers\n    });\n  }\n}\n_class = GoogleBooksService;\n_class.ɵfac = function GoogleBooksService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","GoogleBooksService","constructor","http","apiUrl","apiKey","searchBooks","query","headers","set","get","getBestsellers","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\google-books.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleBooksService {\n  private apiUrl = 'https://www.googleapis.com/books/v1/volumes';\n  private apiKey = 'AIzaSyDguXYpSFXt88B00xhKtFSn5FoKs7u8m_c';\n\n  constructor(private http: HttpClient) {}\n\n  searchBooks(query: string): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.apiKey}`);\n    return this.http.get<any>(`${this.apiUrl}?q=${query}`, { headers: headers });\n  }\n\n  getBestsellers(): Observable<any> {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.apiKey}`);\n    return this.http.get<any>(`${this.apiUrl}/volumes?q=bestsellers`, { headers: headers });\n  }\n\n}\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,6CAA6C;IACtD,KAAAC,MAAM,GAAG,yCAAyC;EAEnB;EAEvCC,WAAWA,CAACC,KAAa;IACvB,MAAMC,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,UAAU,IAAI,CAACJ,MAAM,EAAE,CAAC;IAC/E,OAAO,IAAI,CAACF,IAAI,CAACO,GAAG,CAAM,GAAG,IAAI,CAACN,MAAM,MAAMG,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAEA;IAAO,CAAE,CAAC;EAC9E;EAEAG,cAAcA,CAAA;IACZ,MAAMH,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAAE,UAAU,IAAI,CAACJ,MAAM,EAAE,CAAC;IAC/E,OAAO,IAAI,CAACF,IAAI,CAACO,GAAG,CAAM,GAAG,IAAI,CAACN,MAAM,wBAAwB,EAAE;MAAEI,OAAO,EAAEA;IAAO,CAAE,CAAC;EACzF;;SAdWP,kBAAkB;;mBAAlBA,MAAkB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAlBd,MAAkB;EAAAe,OAAA,EAAlBf,MAAkB,CAAAgB,IAAA;EAAAC,UAAA,EAFjB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}