{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/forms\";\nexport class RegComponent {\n  constructor(http, router, toastr) {\n    this.http = http;\n    this.router = router;\n    this.toastr = toastr;\n    this.newUser = {\n      name: '',\n      email: '',\n      password: ''\n    };\n  }\n  registerUser() {\n    this.http.post('http://localhost:3000/register', this.newUser).subscribe({\n      next: response => {\n        this.toastr.success(response.message, 'Успешная регистрация');\n        this.router.navigate(['/']);\n      },\n      error: error => {\n        if (error && error.error && error.error.message) {\n          this.toastr.error(error.error.message, 'Ошибка при регистрации');\n        } else {\n          this.toastr.error('Что-то пошло не так', 'Ошибка при регистрации');\n        }\n        console.error('Ошибка при регистрации:', error);\n      }\n    });\n  }\n}\n_class = RegComponent;\n_class.ɵfac = function RegComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastrService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-register\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"my-4\", 3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"placeholder\", \"Username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function RegComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function RegComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.registerUser();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function RegComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.newUser.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function RegComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.newUser.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RegComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.newUser.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Register\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newUser.password);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["RegComponent","constructor","http","router","toastr","newUser","name","email","password","registerUser","post","subscribe","next","response","success","message","navigate","error","console","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","i3","ToastrService","selectors","decls","vars","consts","template","RegComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RegComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","RegComponent_Template_input_ngModelChange_4_listener","$event","RegComponent_Template_input_ngModelChange_8_listener","RegComponent_Template_input_ngModelChange_12_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\reg\\reg.component.ts","C:\\Users\\daris\\Documents\\mean-api\\front-end\\src\\app\\reg\\reg.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './reg.component.html',\n  styleUrls: ['./reg.component.css']\n})\nexport class RegComponent {\n  newUser = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n  constructor(private http: HttpClient, private router: Router, private toastr: ToastrService) {}\n\n  registerUser() {\n    this.http.post<any>('http://localhost:3000/register', this.newUser)\n      .subscribe({\n        next: (response) => {\n          this.toastr.success(response.message, 'Успешная регистрация');\n          this.router.navigate(['/']);\n        },\n        error: (error) => {\n          if (error && error.error && error.error.message) {\n            this.toastr.error(error.error.message, 'Ошибка при регистрации');\n          } else {\n            this.toastr.error('Что-то пошло не так', 'Ошибка при регистрации');\n          }\n          console.error('Ошибка при регистрации:', error);\n        }\n      });\n  }\n\n\n\n}\n","<!--<main class=\"form-signin border shadow p-5 text-center\">-->\n<!--    <form (submit)=\"userRegisterClick()\">-->\n<!--      <h1 class=\"h2 mb-5 fw-normal\">Please sign up</h1>-->\n<!--  -->\n<!--      <div class=\"form-floating mb-3\">-->\n<!--        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"floatingInput\" placeholder=\"Your name\">-->\n<!--        <label for=\"floatingInput\">Name</label>-->\n<!--      </div>-->\n<!--      <div class=\"form-floating mb-3\">-->\n<!--        <input type=\"text\" [(ngModel)]=\"login\" name=\"login\" class=\"form-control\" id=\"floatingInput\" placeholder=\"Your login\">-->\n<!--        <label for=\"floatingInput\">Login</label>-->\n<!--      </div>-->\n<!--      <div class=\"form-floating mb-3\">-->\n<!--        <input type=\"text\" [(ngModel)]=\"email\"  name=\"email\" class=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\">-->\n<!--        <label for=\"floatingInput\">Email address</label>-->\n<!--      </div>-->\n<!--      <div class=\"form-floating\">-->\n<!--        <input type=\"text\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\">-->\n<!--        <label for=\"floatingPassword\">Password</label>-->\n<!--      </div>-->\n<!--  -->\n<!--      <div class=\"checkbox my-3 text-start\">-->\n<!--        <label>-->\n<!--          <input type=\"checkbox\" value=\"remember-me\"> Remember me-->\n<!--        </label>-->\n<!--      </div>-->\n<!--      <button class=\"w-100 btn btn-lg btn-primary mb-4\" type=\"submit\">Sign in</button>-->\n<!--      <a [routerLink]=\"['/auth']\" class=\"text-dark\">Already have an account?</a>-->\n<!--    </form>-->\n\n<!--  </main>-->\n<form (ngSubmit)=\"registerUser()\" class=\"my-4\">\n  <div class=\"mb-3\">\n    <label for=\"username\" class=\"form-label\">Username</label>\n    <input type=\"text\" [(ngModel)]=\"newUser.name\" class=\"form-control\" id=\"username\" placeholder=\"Username\" name=\"username\" required>\n  </div>\n  <div class=\"mb-3\">\n    <label for=\"email\" class=\"form-label\">Email</label>\n    <input type=\"email\" [(ngModel)]=\"newUser.email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" name=\"email\" required>\n  </div>\n  <div class=\"mb-3\">\n    <label for=\"password\" class=\"form-label\">Password</label>\n    <input type=\"password\" [(ngModel)]=\"newUser.password\" class=\"form-control\" id=\"password\" placeholder=\"Password\" name=\"password\" required>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}